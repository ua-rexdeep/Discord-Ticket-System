const Discord = require("discord.js");
const fs = require("fs");
const bot = new Discord.Client({ws: { intents: Discord.Intents.ALL }});
var client = null;

const config = require(`./settings.js`) // —Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

if(!config||typeof(config)!="object"||config.token == null) { // –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã - –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    fs.writeFile('settings.js',`// => Default settings
var config = {};

config.guildID = 'guildID?String';
config.ticketCategory = 'categoryID?String'; // –ö–∞—Ç–µ–≥–æ—Ä–∏—è, –∫—É–¥–∞ –±—É–¥—É—Ç —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å—Å—è –≤—Å–µ –∫–∞–Ω–∞–ª—ã —Ç–∏–∫–µ—Ç–æ–≤
config.token = ''; // —Ç–æ–∫–µ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è -> https://discord.com/developers/applications

config.deleteChannelAfterClosing = false; // —É–¥–∞–ª—è—Ç—å –∫–∞–Ω–∞–ª –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è? true - –¥–∞, false - –Ω–µ—Ç

config.quests = [
    ['–í–æ–ø—Ä–æ—Å', '–ü—Ä–∏–º–µ—Ä', 'RegEx(–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞)'],
]

module.exports = config;
    `,()=>{console.log('Process committed suicide. Reason: settings.js not found. File was created with default settings.');process.exit();})
    return
}

var tickets = [];

const botFunctions = {
    ready: function(){ // –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –±–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è –≤ —Å–∏—Å—Ç–µ–º—É.
        console.log("DISCORD",`Bot was logged in.`);
    },
    /**
     * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –∫—Ç–æ-–ª–∏–±–æ, –∫—É–¥–∞-–ª–∏–±–æ –ø–∏—à–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –±–æ—Ç –∏–º–µ–µ—Ç —Ç—É–¥–∞ –¥–æ—Å—Ç—É–ø.
     * @param {Message?Object} message - –∫–ª–∞—Å—Å —Å–æ–æ–±—â–µ–Ω–∏—è -> https://discord.js.org/#/docs/main/stable/class/Message
     * @returns void
     */
    message: function(message){
        // –¢–∏–ø –∫–∞–Ω–∞–ª–∞ - —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /close
        if(message.channel.type=="text"&&message.content.startsWith('/close')) closeTicketCommand(message);
        if(message.channel.type=="dm"&&message.content.startsWith("/bug")) bugCommand(message);
        else if(message.content.startsWith('/ticket')) ticketCommand(message)
        else if(message.channel.type=="dm"&&message.author.id!=bot.user.id) {
            let ticket = tickets.find(ticket=>ticket.user==message.author.id&&ticket.status=='Collect'); // –∏—â–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç –∞–≤—Ç–æ—Ä–∞
            if(ticket) { // –Ω–∞—à–ª–∏
                if(config.quests[ticket.questions.length][2]&&!message.content.match(config.quests[ticket.questions.length][2])) { // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –º–∞—Å–∫–æ–π(RegEX)(–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞)
                    return message.channel.send(`‚ùå | –û—Ç–≤–µ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º. **–í–æ–ø—Ä–æ—Å #${ticket.questions.length+1}**: ${config.quests[ticket.questions.length][0]} \`–ü—Ä–∏–º–µ—Ä: ${config.quests[ticket.questions.length][1]}\`.`);
                }
                let image = ''; 
                message.attachments.forEach(a=>{image = a.url;}) // –Ω–∏–∂–µ –º—ã –æ–ø—Ä–µ–¥–µ–ª–∏–º, –±—ã–ª–∞ –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞, –µ—Å–ª–∏ –¥–∞ - –≤—ã—Ç–∞—â–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ—ë
                ticket.questions.push(image?image:message.content); // –≤—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ —Å–ø–∏—Å–æ–∫
                if(ticket.questions.length>=config.quests.length) { // –≤–æ–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –∞–≤—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å
                    ticket.status = 'Compiled' // —Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–∞–≥–æ–≤
                    let url = ticket.questions.find(x=>x.match(/^([a-z\-_0-9\/\:\.]*\.(jpg|jpeg|png|gif))$/i)); // –∏–º–µ–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º
                    console.log(url)
                    if(url) url = url.match(/^([a-z\-_0-9\/\:\.]*\.(jpg|jpeg|png|gif))$/i)
                    console.log(url)
                    message.channel.send(embed({
                        color:"#FF0000",
                        image: url?url[0]:false,
                        description: `–ó–∞—è–≤–∫–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∞! –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ä–µ–∞–∫—Ü–∏–µ–π –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n\n TicketID: ${ticket.id} \n\n**---> –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ <---**\n ${ticket.questions[ticket.questions.length-1]}\n ${ticket.questions.slice(0,ticket.questions.length-(url?2:1)).map((q,idx)=>{
                            return `\n**#${idx+1}. ${config.quests[idx][0]}**: ${q}`
                        }).join("")}`,
                    })).then(async (m)=>{
                        ticket.userMessage = m.id; // –∑–∞–ø–æ–º–∏–Ω–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–∞–ª–µ–µ –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é
                        await m.react("‚úÖ")
                        await m.react("‚ùå")
                        saveTickets(); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º—Å—è
                    });
                    saveTickets(); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º—Å—è
                } else { // —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
                    message.channel.send(embed({
                        color:"#FF0000",
                        description: `**–í–æ–ø—Ä–æ—Å #${ticket.questions.length+1}**: ${config.quests[ticket.questions.length][0]} \`–ü—Ä–∏–º–µ—Ä: ${config.quests[ticket.questions.length][1]}\`.`,
                    }));
                    saveTickets(); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º—Å—è
                }
            }
        }
    },
    messageReactionAdd: function(react,user){
        let ticket = tickets.find(x=>x.userMessage==(react.message.id||react.message)&&x.status=='Compiled'&&x.user==user.id);
        let _user = bot.users.cache.get(user.id);
        if(ticket) {
            if(react.emoji.name=="‚úÖ") {
                ticket.status = 'Sended';
                _user.send(embed({
                    title: `‚úÖ –ú—ã —Å–æ–∑–¥–∞–ª–∏ –í–∞–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞. üòä`
                }))
                let url = ticket.questions[5].match(/^([a-z\-_0-9\/\:\.]*\.(jpg|jpeg|png|gif))$/i);
                bot.guilds.cache.get(config.guildID).channels.create(`ticket_${ticket.id}`,{
                    permissionOverwrites: [
                        {
                            id: user.id,
                            allow: ['VIEW_CHANNEL', 'SEND_MESSAGES'],
                        },
                        {
                          id: config.guildID,
                          deny: 'VIEW_CHANNEL'
                        },
                    ],
                    parent: getChannel(config.ticketCategory),
                }).then(c=>{
                    c.send('<@'+user.id+'> –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∏—Å—á–µ—Ä–ø–∞–Ω, –∏–ª–∏ —É –í–∞—Å –ø—Ä–æ—Å—Ç–æ –±–æ–ª—å—à–µ –Ω–µ—Ç –∂–µ–ª–∞–Ω–∏—è –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã, **–∑–∞–∫—Ä–æ–π —Ç–∏–∫–µ—Ç** –∫–æ–º–∞–Ω–¥–æ–π `/close`.').then(()=>c.send(embed({
                            image: url?url[0]:false,
                            description: `\n\n **TicketID**: ${ticket.id}\nUser: <@${ticket.user}>\n\n**---> –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ <---**\n ${ticket.questions[ticket.questions.length-1]}\n ${ticket.questions.slice(0,ticket.questions.length-(url?2:1)).map((q,idx)=>{
                                return `\n**#${idx+1}. ${config.quests[idx][0]}**: ${q}`
                            }).join("")}`,
                        })).then(async (m)=>{
                            ticket.staffMessage = m.id;
                            saveTickets();
                        }));
                })
            }
            if(react.emoji.name=="‚ùå") {
                ticket.status = 'Collect';
                ticket.questions = [];
                _user.send(embed({
                    title: `üòü –ù—É, –¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑.`,description: `**–í–æ–ø—Ä–æ—Å #1**: ${config.quests[0][0]}. \`–ü—Ä–∏–º–µ—Ä: ${config.quests[0][1]}\`.`,
                }))
                saveTickets();
            }
        }
    },
}

/**
 * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–∏–∫–µ—Ç. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å, –±—É–¥–µ—Ç –ª–∏ —É–¥–∞–ª—è—Ç—å—Å—è –∫–∞–Ω–∞–ª —Å —Ç–∏–∫–µ—Ç–æ–º, –∏–ª–∏ –Ω–µ—Ç -> config.deleteChannelAfterClosing.
 * @param {Message?Object} message  - –∫–ª–∞—Å—Å —Å–æ–æ–±—â–µ–Ω–∏—è -> https://discord.js.org/#/docs/main/stable/class/Message
 * @returns void
 */
const closeTicketCommand = function(message) {
    let ticket = tickets.find(ticket=>{
        console.log(message.channel.name, ticket.id)
        return message.channel.name=="ticket_"+ticket.id.toLocaleLowerCase()
    });
    if(!ticket) return; // –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –ø—É—Å—Ç—É—é
    ticket.status = "Solved" // —Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å, –¥–∞–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–∞–≥–æ–≤
    if(config.deleteChannelAfterClosing) message.channel.delete();
    else {
        message.delete(); // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ /close –æ—Ç —Ç–æ–≥–æ, –∫—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–∏–∫–µ—Ç
        message.channel.send(embed({
            description: `<@${message.author.id}> –∑–∞–∫—Ä—ã–ª —Ç–∏–∫–µ—Ç.`
        }));
        message.channel.overwritePermissions([{id: ticket.user, deny: ['VIEW_CHANNEL']},{id: config.guildID,deny: 'VIEW_CHANNEL'}]); // —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–Ω–∞–ª–∞. –£ –∞–≤—Ç–æ—Ä–∞ –∑–∞–±–∏—Ä–∞–µ—Ç—Å—è –ø—Ä–∞–≤–æ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä
        message.channel.setName(`closedTicket_${ticket.id}`); // —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏, –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç–æ—Ä–æ–≥–æ —Ç–∏–∫–µ—Ç–∞
    }
    saveTickets(); // —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–∏–∫–µ—Ç—ã, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å
}

/**
 * –û—Ç—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ —Ç–∏–∫–µ—Ç –∑–∞—Å—Ç—Ä—è–ª
 * @param {Message?Object} message  - –∫–ª–∞—Å—Å —Å–æ–æ–±—â–µ–Ω–∏—è -> https://discord.js.org/#/docs/main/stable/class/Message
 * @returns void
 */
const bugCommand = function(message) {
    let ticket = tickets.find(ticket=>ticket.user==message.author.id&&ticket.status=='Collect'); // –∏—â–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç –∞–≤—Ç–æ—Ä–∞
    if(!ticket) return; // —Ç–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
    message.reply(embed({
        color: "#4caf50",
        description: `üòü | –ú–Ω–µ –∂–∞–ª—å —á—Ç–æ —Ç–∞–∫ –ø–æ–ª—É—á–∏–ª–æ—Å—å. –Ø –æ—Ç—á–∏—Ç–∞—é—Å—å –ø–æ —ç—Ç–æ–º—É –ø–æ–≤–æ–¥—É.\n–ö–æ–º–∞–Ω–¥–∞ \`/ticket\` —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.`
    }));
//     getChannel(ticketChannel).send(`<@282816403721945088>`), getChannel(ticketChannel).send(embed({
//         color: "#ff9800",
//         title: `Stuck report | ${ticket.id}`,
//         description: `User: <@${ticket.user}>\nStatus: **${ticket.status}**\nData: \`\`\`cs
// ${JSON.stringify(ticket.questions)}\`\`\``
//     })) // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –ø–æ —Ç–∏–∫–µ—Ç—É
    ticket.status = "Stuck"; // –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ç–∏–∫–µ—Ç —Å –ø–æ–º–µ—Ç–∫–æ–π —á—Ç–æ –æ–Ω –∑–∞—Å—Ç—Ä—è–ª
    saveTickets(); // —Å–æ—Ö–Ω–∞—Ä—è–µ–º
}

/**
 * –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞
 * @param {Message?Object} message  - –∫–ª–∞—Å—Å —Å–æ–æ–±—â–µ–Ω–∏—è -> https://discord.js.org/#/docs/main/stable/class/Message
 * @returns void
 */
const ticketCommand = function(message) {
    if(message.channel.type!="dm") message.reply(`‚ùå | –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å **–ë–æ—Ç–æ–º**: <@${bot.user.id}>`) // –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å –±–æ—Ç–æ–º
    else {
        if(tickets.find(ticket=>ticket.user==message.author.id&&ticket.status=='Collect')) return message.channel.send(embed({
            title:"‚ùå | –í—ã —É–∂–µ –∏–º–µ–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç. –û–±–Ω–∞—Ä—É–∂–∏–ª–∏ –æ—à–∏–±–∫—É? \`/bug\`"
        })) // –∞–≤—Ç–æ—Ä —É–∂–µ –∏–º–µ–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç
        let ticketID = "", c = "qwertyuiopasdfghjklzxcvbnm_QWERTYUIOPASDFGHJKLZXCVBNM0123456789";  // => –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID —Ç–∏–∫–µ—Ç–∞
        for (let index = 0; index < 20; index++) ticketID+=c[parseInt(Math.random()*c.length)]; // => –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID —Ç–∏–∫–µ—Ç–∞
        // ============================================================================================== //
        tickets.push({
            id: ticketID,
            user: message.author.id,
            time: new Date().getTime(),
            status: 'Collect',
            questions: [],
        }) // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–∫–µ—Ç –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
        message.reply(embed({
            color:"#FF0000",
            description: `–°–∏—Å—Ç–µ–º–∞ –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã, –∞ –í—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –Ω–∞ –Ω–∏—Ö. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º—ã —Å–æ—Å—Ç–∞–≤–∏–º –∑–∞—è–≤–∫—É. –û—Ç–≤–µ—á–∞–µ—Ç–µ –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º, –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–º–∞–Ω–¥.\n**–í–æ–ø—Ä–æ—Å #1**: ${config.quests[0][0]}. \`–ü—Ä–∏–º–µ—Ä: ${config.quests[0][1]}\`.`,
        }))
        saveTickets(); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    }
}

bot.login(config.token); // –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–∏–∫–µ—Ç—ã, —Å—Ä–µ–¥—Å—Ç–≤–æ–º –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª ticketStorage.json
 */
const saveTickets = ()=>{
    fs.writeFile('ticketStorage.json',JSON.stringify(tickets), ()=>{console.log(new Date().toLocaleTimeString()+" > SAVE")})
}

/**
 * –°—á–∏—Ç—ã–≤–∞–µ–º —Ç–∏–∫–µ—Ç—ã —Å —Ñ–∞–π–ª–∞ ticketStorage.json –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
 */
fs.readFile('ticketStorage.json', 
    {encoding:'utf8', flag:'r'},
    function(err, data) {
        if(err) {
            console.log('ticketStorage.json > created')
            fs.writeFile('ticketStorage.json','[]',()=>{})
        }
        else {
            if(data.length<2) data = "[]"
            console.log('ticketStorage.json > parsed '+JSON.parse(data).length+' tickets')
            tickets = JSON.parse(data);
        }
    }
);
   
/**
 * –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞ –¥–∏—Å–∫–æ—Ä–¥–∞: –±–æ—Ç —Ç–µ—Ä—è–µ—Ç –∫–ª–∞—Å—Å—ã(—Å—Å—ã–ª–∫–∏) –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. –°–æ–±—ã—Ç–∏–µ raw –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±–æ–º –¥–µ–π—Å—Ç–≤–∏–∏. –¢–∞–∫ —è –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∞ –ø–æ—Ç–µ—Ä—è–Ω–∞ —Å–≤—è–∑—å
 */
bot.on('raw', packet => {
    if(packet.t=="MESSAGE_REACTION_ADD") {
        console.log(packet)
        botFunctions.messageReactionAdd({
            emoji: packet.d.emoji,
            message: packet.d.message_id,
            channel: packet.d.channel_id,
        }, bot.users.cache.get(packet.d.user_id))
    }
});

// —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π
for(let func in botFunctions) {
    bot.on(func, botFunctions[func]);
}

/**
 * 
 * @param {Object} data - —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ –æ–±—ä–µ–∫—Ç–∞
 * @returns Discord:MessageEmbed
 */
const embed = function(data = {}){
    let em = new Discord.MessageEmbed()
	em.setColor(data.color||"#FF0000")
	if(data.title) em.setTitle(data.title)
	if(data.url) em.setURL(data.url)
	em.setAuthor("‚ù§Ô∏è WAO Dayz | Ticket System ‚ù§Ô∏è","https://cdn.discordapp.com/icons/757263881163767848/51afceb8b9d21c1a304e91da39c2eb13.webp?size=128","https://discord.gg/7mSnMFKMcy") 
    //if(data.author) em.setAuthor(data.author.name, data.author.avatar, data.author.url)
	if(data.description) em.setDescription(data.description)
	if(data.thumbail) em.setThumbnail(data.thumbail)
	if(data.fields) em.addFields(data.fields)
	if(data.image) em.setImage(data.image)
	if(data.footer) em.setFooter(data.footer.text, data.footer.image);
	em.setTimestamp()
    return em;
}

/**
 * –ù–∞—Ö–æ–¥–∏—Ç –∫–∞–Ω–∞–ª –ø–æ –µ–≥–æ ID
 * @param {string} channelID - ID –∫–∞–Ω–∞–ª–∞
 * @returns Discord:Channel
 */
const getChannel = (channelID) => {
    return bot.guilds.cache.get(config.guildID).channels.cache.get(channelID);
}